{"mappings":"AAAA,MAAM,eAAe,GAAG,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,AAAC;AAE1D,MAAM,OAAO,GAAG,SAAU,CAAC,EAAE;IAC3B,OAAO,IAAI,OAAO,CAAC,SAAU,CAAC,EAAE,MAAM,EAAE;QACtC,UAAU,CAAC,WAAY;YACrB,MAAM,CAAC,IAAI,KAAK,CAAC,CAAC,qCAAqC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;SACvE,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC;KACd,CAAC,CAAC;CACJ,AAAC;AAEF,uCAAuC;AAEvC,uCAAuC;AACvC,MAAM,MAAM,GAAG,iBAAkB;IAC/B,IAAI;QACF,MAAM,GAAG,GAAG,MAAM,KAAK,CACrB,8EAA8E;QAC9E,2EAA2E,CAC5E,AAAC;QACF,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,IAAI,EAAE,AAAC;QAC9B,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,MAAM,IAAI,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAEhE,IAAI,EAAE,MAAM,EAAN,OAAM,CAAA,EAAE,GAAG,IAAI,CAAC,IAAI,AAAC;QAC3B,OAAM,GAAG;YACP,EAAE,EAAE,OAAM,CAAC,EAAE;YACb,KAAK,EAAE,OAAM,CAAC,KAAK;YACnB,SAAS,EAAE,OAAM,CAAC,SAAS;YAC3B,SAAS,EAAE,OAAM,CAAC,UAAU;YAC5B,KAAK,EAAE,OAAM,CAAC,SAAS;YACvB,QAAQ,EAAE,OAAM,CAAC,QAAQ;YACzB,WAAW,EAAE,OAAM,CAAC,YAAY;YAChC,WAAW,EAAE,OAAM,CAAC,WAAW;SAChC,CAAC;QAEF,OAAO,CAAC,GAAG,CAAC,OAAM,CAAC,CAAC;QAEpB,MAAM,MAAM,GAAG,CAAC;;4BAEQ,EAAE,OAAM,CAAC,KAAK,CAAC,OAAO,EAC5C,OAAM,CAAC,KAAK,CACb;;0BAEqB,EAAE,OAAM,CAAC,KAAK,CAAC;;;;;;;;;+EASsC,EACzD,OAAM,CAAC,WAAW,CACnB;;;;;;;8EAOyD,EACxD,OAAM,CAAC,QAAQ,CAChB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kBAgCH,EAAE,OAAM,CAAC,WAAW,CACjB,GAAG,CAAC,CAAA,GAAG,GAAI;YACV,OAAO,CAAC;;;;;oDAKsB,EAAE,GAAG,CAAC,QAAQ,CAAC;;mDAEhB,EAAE,GAAG,CAAC,IAAI,CAAC;wBACtC,EAAE,GAAG,CAAC,WAAW,CAAC;;yBAEjB,CAAC,CAAC;SACN,CAAC,CACD,IAAI,CAAC,EAAE,CAAC,CAAC;;;;;;;;;oDASsB,EAC9B,OAAM,CAAC,SAAS,CACjB;;;;;0BAKK,EAAE,OAAM,CAAC,SAAS,CAAC;;;;;;;;;IASzC,CAAC,AAAC;QACF,eAAe,CAAC,SAAS,GAAG,EAAE,CAAC;QAC/B,eAAe,CAAC,kBAAkB,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;KAC1D,CAAC,OAAO,CAAC,EAAE;QACV,KAAK,CAAC,CAAC,CAAC,CAAC;KACV;CACF,AAAC;AAEF,MAAM,EAAE,CAAC","sources":["src/js/controller.js"],"sourcesContent":["const recipeContainer = document.querySelector('.recipe');\n\nconst timeout = function (s) {\n  return new Promise(function (_, reject) {\n    setTimeout(function () {\n      reject(new Error(`Request took too long! Timeout after ${s} second`));\n    }, s * 1000);\n  });\n};\n\n// https://forkify-api.herokuapp.com/v2\n\n///////////////////////////////////////\nconst recipe = async function () {\n  try {\n    const res = await fetch(\n      // 'https://forkify-api.herokuapp.com/api/v2/recipes/5ed6604591c37cdc054bcc40'\n      'https://forkify-api.herokuapp.com/api/v2/recipes/5ed6604591c37cdc054bc886'\n    );\n    const data = await res.json();\n    if (!res.ok) throw new Error(`${data.message} (${res.status})`);\n\n    let { recipe } = data.data;\n    recipe = {\n      id: recipe.id,\n      title: recipe.title,\n      publisher: recipe.publisher,\n      sourceUrl: recipe.source_url,\n      image: recipe.image_url,\n      servings: recipe.servings,\n      cookingTime: recipe.cooking_time,\n      ingredients: recipe.ingredients,\n    };\n\n    console.log(recipe);\n\n    const markup = `\n            <figure class=\"recipe__fig\">\n                  <img src=\"${recipe.image}\" alt=\"${\n      recipe.title\n    }\" class=\"recipe__img\" />\n                  <h1 class=\"recipe__title\">\n                    <span>${recipe.title}</span>\n                  </h1>\n                </figure>\n\n                <div class=\"recipe__details\">\n                  <div class=\"recipe__info\">\n                    <svg class=\"recipe__info-icon\">\n                      <use href=\"src/img/icons.svg#icon-clock\"></use>\n                    </svg>\n                    <span class=\"recipe__info-data recipe__info-data--minutes\">${\n                      recipe.cookingTime\n                    }</span>\n                    <span class=\"recipe__info-text\">minutes</span>\n                  </div>\n                  <div class=\"recipe__info\">\n                    <svg class=\"recipe__info-icon\">\n                      <use href=\"src/img/icons.svg#icon-users\"></use>\n                    </svg>\n                    <span class=\"recipe__info-data recipe__info-data--people\">${\n                      recipe.servings\n                    }</span>\n                    <span class=\"recipe__info-text\">servings</span>\n\n                    <div class=\"recipe__info-buttons\">\n                      <button class=\"btn--tiny btn--increase-servings\">\n                        <svg>\n                          <use href=\"src/img/icons.svg#icon-minus-circle\"></use>\n                        </svg>\n                      </button>\n                      <button class=\"btn--tiny btn--increase-servings\">\n                        <svg>\n                          <use href=\"src/img/icons.svg#icon-plus-circle\"></use>\n                        </svg>\n                      </button>\n                    </div>\n                  </div>\n\n                  <div class=\"recipe__user-generated\">\n                    <svg>\n                      <use href=\"src/img/icons.svg#icon-user\"></use>\n                    </svg>\n                  </div>\n                  <button class=\"btn--round\">\n                    <svg class=\"\">\n                      <use href=\"src/img/icons.svg#icon-bookmark-fill\"></use>\n                    </svg>\n                  </button>\n                </div>\n\n                <div class=\"recipe__ingredients\">\n                  <h2 class=\"heading--2\">Recipe ingredients</h2>\n                  <ul class=\"recipe__ingredient-list\">\n                  ${recipe.ingredients\n                    .map(ing => {\n                      return `\n                    <li class=\"recipe__ingredient\">\n                      <svg class=\"recipe__icon\">\n                        <use href=\"src/img/icons.svg#icon-check\"></use>\n                      </svg>\n                      <div class=\"recipe__quantity\">${ing.quantity}</div>\n                      <div class=\"recipe__description\">\n                        <span class=\"recipe__unit\">${ing.unit}</span>\n                        ${ing.description}\n                      </div>\n                    </li>`;\n                    })\n                    .join('')}\n                    \n                  </ul>\n                </div>\n\n                <div class=\"recipe__directions\">\n                  <h2 class=\"heading--2\">How to cook it</h2>\n                  <p class=\"recipe__directions-text\">\n                    This recipe was carefully designed and tested by\n                    <span class=\"recipe__publisher\">${\n                      recipe.publisher\n                    }</span>. Please check out\n                    directions at their website.\n                  </p>\n                  <a\n                    class=\"btn--small recipe__btn\"\n                    href=\"${recipe.sourceUrl}\"\n                    target=\"_blank\"\n                  >\n                    <span>Directions</span>\n                    <svg class=\"search__icon\">\n                      <use href=\"src/img/icons.svg#icon-arrow-right\"></use>\n                    </svg>\n                  </a>\n                </div>\n    `;\n    recipeContainer.innerHTML = '';\n    recipeContainer.insertAdjacentHTML('afterbegin', markup);\n  } catch (e) {\n    alert(e);\n  }\n};\n\nrecipe();\n"],"names":[],"version":3,"file":"index.62406edb.js.map","sourceRoot":"/__parcel_source_root/"}